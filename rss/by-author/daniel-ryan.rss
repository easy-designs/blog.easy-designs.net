<?xml version="1.0" encoding="utf-8"?>


<rss version="2.0"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:admin="http://webns.net/mvcb/"
	xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:atom="http://www.w3.org/2005/Atom">
	
	
	<channel>
		<title>The Easy Designs Blog: Posts by Daniel Ryan</title>
		<link>https://blog.easy-designs.net/archives/by-author/daniel-ryan/</link>
		<dc:language>en</dc:language>
		<description></description>
		<dc:rights>(c) Copyright 2005â€“2023 Easy! Designs, LLC. All rights reserved unless otherwise noted.</dc:rights>
		<dc:creator>Easy! Designs, LLC</dc:creator>
		<dc:date>2013-09-16</dc:date>
		<admin:generatorAgent rdf:resource="http://expressionengine.com/"/>
		<atom:link href="http://blog.easy-designs.net/rss/by-author/daniel-ryan.rss" rel="self" type="application/rss+xml"/>
	
		<item>
			<title>The Challenges and Freedoms of Creating a Chrome App</title>
			<author>daniel@easy-designs.net (Daniel Ryan)</author>
			<description><![CDATA[
				<p>
	As <a href="/archives/we-built-a-chrome-app/" title="Read 'We Built a Chrome App'">Aaron mention last week</a>, we recently developed a Chrome App for <a href="http://wikihow.com/">wikiHow.com</a> (<a href="https://chrome.google.com/webstore/detail/ickaeddjnhfofihhibhnjemlphjmnchl">Chrome Web Store</a> or <a href="http://apps.wikihow.com/survivalkit">directly</a>). In reality though (with one small exception) we built a modern web app that leveraged many features of <span class="caps">HTML</span>5 and <span class="caps">CSS</span>3; the exception was offline mode, but more on that shortly. As Engadget put it, <a href="http://www.engadget.com/2010/12/10/chrome-web-store-html5-and-the-ipad-symbiosis-at-its-best/">Chrome apps have a lot in common with iPad apps</a>. While many blogs have questioned the need for such a store, what is clear is that modern browsers allow developers to brake the mold of traditional websites both in terms of design and client-side&nbsp;implementation.</p>
<figure>
	</figure>
<h2>
	Designing Outside the&nbsp;Box(es)</h2>
<p>
	Websites are mostly, for all intents and purposes, collections of rectangles. For the wikiHow app, our design took cues from the real world, combining decks of playing cards with newspaper-esque broadsheets. To give the cards the appearance of being dealt, we used <span class="caps"><span class="caps">CSS</span></span> transitions. In fact, the first prototype we built used no JavaScript at all, but instead relied on <code>:target</code> selectors to trigger the animations and state changes. Unfortunately, however, the complexity of the application became a bit more than that implementation could&nbsp;handle.</p>
<p>
	The visual indication for changing from deck-to-deck was a card flip, much like the one <a href="http://developer.apple.com/library/safari/#documentation/InternetWeb/Conceptual/SafariVisualEffectsProgGuide/Transitions/Transitions.html">Apple demonstrates</a>. It didn&rsquo;t take long, however, to figure out that the simple markup used there wasn&rsquo;t going to work for&nbsp;us.</p>
<p>
	In the demo the card is made of a single &ldquo;card&rdquo; element containing two &ldquo;face&rdquo; elements: one for the front, one for the back. With a bit of <span class="caps"><span class="caps">CSS</span></span> to style the rotation and a JavaScript handler to trigger a <code>class</code> change, the card flips over to reveal its &ldquo;back&rdquo;. For us, this markup requirement was not going to work: the front face of the card was going to be in one deck and the back face would be in&nbsp;another.</p>
<p>
	The solution was to place both elements at the same point on the screen, with the back face pre-rotated, then rotate them both at the same time. Well, at least that&rsquo;s the solution in browsers that support 3D transforms; at the time, and still at the time of this writing, Chrome wasn&rsquo;t in that list. In 2D-only browsers, the <code>-webkit-backface-visibility</code> property used in the demo has no effect, leaving the rotated card showing it&rsquo;s supposed-to-be-hidden face visible but&nbsp;mirrored.</p>
<p>
	Borrowing some inspiration from <a href="http://modernizr.com">modernizr.js</a>, we detected if the browser supported 3D transforms or not and added a <code>class</code> to the <code>body</code> so we could have two sets of <span class="caps"><span class="caps">CSS</span></span> (<a href="https://gist.github.com/738720">grab the code over at Github</a>). In 2D browsers, instead of rotating both elements 180&deg;, we rotate the front face 90&deg; then rotate the back face from -90&deg; to 0&deg;. This meant adding a <code>-webkit-transition-delay</code> property on the animation for <code>-webkit-transform</code>, but only when the face is about to be revealed, and not when it needs to be hidden. It got really complex quickly (<a href="https://gist.github.com/738725">this is just the relevant <span class="caps"><span class="caps">CSS</span></span> for flipping and zooming the&nbsp;cards</a>).</p>
<p>
	Besides all of the cool animations that set the design apart, one of the requirements from the client was that <em>all</em> the fonts used by the app needed to be embedded fonts (using <code class="css">@font-face</code>). We used a collection from the <a href="http://code.google.com/webfonts">Google Font Directory</a> which made it easy to implement. However, we ran into a bug in Chrome on Windows where (yes, this is very specific) a web font with ligatures that has <code>text-shadow</code> applied to it causes a block of text to&nbsp;disappear.</p>
<p>
	You don&rsquo;t see any drop shadow on our type, you say? That&rsquo;s because it is set to <code>rgba(255,255,255,0.01)</code> in order to trigger anti-aliasing on the type. Without it, Chrome rendered these fonts with no anti-aliasing at all on Windows. Surely we could just use <code>-webkit-font-smoothing</code> like <a href="http://maxvoltar.com/archive/-webkit-font-smoothing">Tim suggests</a>, right? Unfortunately, it isn&rsquo;t supported by any production browser or we would have. So we were stuck with the <code>text-shadow</code> hack and the accompanying bug. We ended up working around the issue by detecting the <span class="caps">OS</span> and the browser (obviously running counter to our inclination toward feature-detection) to specify a different font on Chrome for&nbsp;Windows.</p>
<p>
	Those were just the two biggest design challenges we faced; there were dozens of smaller ones for which we found simple&nbsp;workarounds.</p>
<p>
	The biggest thing I learned in building this app is that <code>transform</code> as a property was never thought through to handle complex scenarios. It works great when you want to do one thing to an object at a time; it falls apart when you want to do multiple things. As I outlined in more detail for <a href="http://www.netmag.co.uk/">.net Magazine</a>, I would love to see <code>transform</code> become a shorthand property (like <code>background</code> and <code>font</code> are now) for a family of properties that could be independently manipulated: <code>transform-translate</code>, <code>transform-rotate</code>, <code>transform-scale</code>, etc. I&rsquo;d also like to see an <code>@media</code> query for 3D support so that 2D and 3D transforms could be specified without any scripting&nbsp;involved.</p>
<h2>
	Client-side&nbsp;Databases</h2>
<p>
	This app does not talk to the main wikiHow site to get its content; all 120+ articles, dozens of quiz questions and quiz responses are stored in an <span class="caps">HTML</span>5-driven client-side SQLite database. When the app loads, it grabs a <span class="caps"><span class="caps">SQL</span></span> file, parses it and loads the data in. In theory, you can give your database a version number then check against that to see if it needs updating. In practice, that only worked sporadically. What we settled on doing was loading the data at launch time, setting a session cookie to note that the database was loaded, and then reloading it if that cookie wasn&rsquo;t present. The only table we don&rsquo;t reload is the one containing that user&rsquo;s quiz results; that ensures their scores persist across database upgrades. Aside from the versioning issue, <span class="caps">HTML</span>5 databases work as the spec calls for, which was a welcome&nbsp;relief.</p>
<p>
	We did find it odd, however, that there was no way to provide a pre-created SQLite database as part of the Chrome installer. It would have been really nice to have that be part of the install rather than having to trigger it when the application is loaded like it does for a normal web&nbsp;app.</p>
<h2>
	Navigating Through a One Page&nbsp;Site</h2>
<p>
	There&rsquo;s only one page of <span class="caps"><span class="caps">HTML</span></span> for the app (plus a few small snippets for the About and Feedback pages). To track the user&rsquo;s state as she moves through the app, we followed the convention of updating <code>window.location.hash</code>. All of our app&rsquo;s logic for handling URLs is contained in about 400 lines of code. This single function, triggered by the <code>onHashChange</code> event, determines what content is currently showing and what content needs to be shown according to the current <code>hash</code>.</p>
<p>
	For our app, that meant five different possible types of content to be shown that had to transition in from one of six possible current states. While it&rsquo;s all fairly straightforward, it took a lot of testing to get right; I can&rsquo;t thank everyone on our team enough for the hours of clicking through the app and submitting bug reports that exhaustively listed every step they&rsquo;d taken from launch to the broken state they&rsquo;d found themselves in. All of this work resulted in an app that can be refreshed at any point and will get you right back to where you were, has shareable links to every piece of content, and fully supports the browser&rsquo;s back and forward&nbsp;buttons.</p>
<p>
	It took a lot of effort to make something that &ldquo;just works.<span class="final quote">&rdquo;</span></p>
<h2>
	Going&nbsp;Offline</h2>
<p>
	<span class="caps">HTML</span>5 has a specification for <a href="https://www.w3.org/TR/offline-webapps/">offline manifest files</a> that allows a web app to specify how it can work when no network connection is present. However, the amount of static media that we needed to cache to provide the right experience in offline mode was larger than any current browsers allow. This was where we benefited from the Chrome Web Store: Chrome apps can ask for unlimited storage (this goes beyond just the offline cache). For users that have the app installed from the store, they can access most of the app even when not connected to the Internet. The exceptions were obvious things like social network sharing and sending feedback to&nbsp;wikiHow.</p>
<p>
	What proved difficult here was detecting when the app was offline. The specification for <span class="caps">HTML</span>5 says that JavaScript can query <code>window.navigator.onLine</code> but that always returns true in current versions of Webkit. Instead we turned to <span class="caps"><span class="caps">AJAX</span></span> to load a page on the server and see what it contained. When the app is online, it has the normal content we expect to get back. When it&rsquo;s offline, however, we used the manifest to point the same <span class="caps"><span class="caps">URL</span></span> to an empty <span class="caps"><span class="caps">HTML</span></span> file. If the app doesn&rsquo;t detect any content from the request, it hides all the online-only&nbsp;features.</p>
<p>
	Another issue we ran into was the way that the spec parses URLs in the <code>FALLBACK</code> section (this is where you map online URLs to their offline counterparts). These URLs are greedy; that is to say they are a pattern match with no way to limit the match. In our case, our base <span class="caps"><span class="caps">URL</span></span> is just &ldquo;/&rdquo;. That meant that <em>any</em> <span class="caps"><span class="caps">URL</span></span> we tried to load while offline loaded the content of our index.html file. As you&rsquo;d expect, this caused some major issues. Any <span class="caps"><span class="caps">URL</span></span> that was called (and which hadn&rsquo;t been specifically dealt with in the manifest) would reload index.html and run all of its scripts, resulting in an infinite loop of loading content. To address this issue, we had to add resources to <code>FALLBACK</code> for every <span class="caps"><span class="caps">URL</span></span> we had locally and move things like our Google Analytics code into the core JavaScript file, only executing them if the app was determined to be online when it was&nbsp;launched.</p>
<h2>
	Final&nbsp;Thoughts</h2>
<p>
	It&rsquo;s easy to understand many of the critics of the Web Store when they don&rsquo;t see the point of having these apps be installable when many just point to a website. I&rsquo;m sure Google has its reasons (not the least of which is Chrome <span class="caps">OS</span>), but what I&rsquo;ve taken away from this project is that the store is a way to give developers permission to really go beyond what is normally considered a website and deliver true applications in a browser. It makes it <span class="caps">OK</span> to ignore legacy browsers and focus on the future. Like Tom Merrit said in his <a href="http://twit.tv/specials53">coverage of the store announcement</a>, many of the best iPad apps today are just wrappers around great web apps. It&rsquo;s the same with the Chrome Web&nbsp;Store: it is essentially&nbsp;a wrapper&mdash;or better&nbsp;yet, a gatekeeper&mdash;around great web apps and&nbsp;enables&nbsp;the developer to know exactly what platform they&rsquo;ll be running&nbsp;on.</p>
<p>
	In a few years, when <span class="caps">HTML</span>5 is more widely supported in the browsers that people are actually using, it might not be necessary to have these restrictions (or the Chrome Web Store), but for now, it lets us move forward, pushing the boundaries of new technology, and that&rsquo;s a good thing for the&nbsp;web.</p>
				<img src="https://blog.easy-designs.net/?ACT=38&utmac=UA-176472-10&utmn1601810728&utmr=https%3A%2F%2Fblog.easy-designs.net%2Farchives%2Fby-author%2Fdaniel-ryan%2F&utmp=%2Frss%2Fby-author%2Fdaniel-ryan.rss&guid=ON" alt="" style="position:absolute;"/>
			]]></description>
					<link>https://blog.easy-designs.net/archives/the-challenges-and-freedoms-of-creating-a-chrome-app/</link>
			<guid>https://blog.easy-designs.net/archives/the-challenges-and-freedoms-of-creating-a-chrome-app/</guid>
			<dc:date>2010-12-15T16:07:00-05:00</dc:date>
		</item>
	
		<item>
			<title>Monitor Your Websites with Notifications</title>
			<author>daniel@easy-designs.net (Daniel Ryan)</author>
			<description><![CDATA[
				<p>If you&rsquo;ve ever been surprised to find out that one of your websites is down, you&rsquo;ve no doubt tried to figure out a good way to monitor their health. There are many services on the internet that will check in on your sites periodically and let you know when there&rsquo;s been a problem, but often these aren&rsquo;t real time enough. After a recent <span class="caps">DDOS</span> to one of the sites I run, I put together a simple Python script to check in on my sites and let me know if any of them return anything besides &ldquo;<span class="caps">HTTP</span> 200&rdquo; as the response&nbsp;code.</p>
<h2>Notifications</h2>
<p>I&rsquo;ve built in support for <a href="http://growl.info">Growl notifications</a> and iOS push notifications via <a href="http://boxcar.io">Boxcar</a>.  You could also modify the script to send emails,&nbsp;etc.</p>
<h3>Growl</h3>
<p>If you&rsquo;re running Growl on your Mac (maybe Windows as well, I haven&rsquo;t checked), you can receive Growl notifications by setting the <code>USE_GROWL</code> variable to <code>True</code> in the script. You can optionally then use <a href="http://prowl.weks.net/">Prowl</a> or <a href="http://howlapp.com/">Howl</a> to pass the same notices on to your iOS device, following either app&rsquo;s provided&nbsp;instructions.</p>
<h3>Boxcar</h3>
<p>Unlike Prowl and Howl, Boxcar doesn&rsquo;t require Growl (meaning it could work on a Linux box) and doesn&rsquo;t cost anything. To use Boxcar, you need to <a href="http://boxcar.io/site/providers">become a Boxcar provider</a>. Once you&rsquo;ve registered your provider, fill in the script&rsquo;s <code>BOXCAR_API_KEY</code> and <code>BOXCAR_API_SECRET</code> variables with the ones Boxcar gives you. Finally, set <code>BOXCAR_EMAIL</code> to the email address you registered with Boxcar and <code>USE_BOXCAR</code> to <code>True</code>.</p>
<h2>Installation</h2>
<div id="gist460331" class="gist">    <div class="gist-file" translate="no">      <div class="gist-data">        <div class="js-gist-file-update-container js-task-list-container file-box">  <div id="file-check_site-py" class="file my-2">        <div itemprop="text" class="Box-body p-0 blob-wrapper data type-python  ">        <div class="js-check-bidi js-blob-code-container blob-code-content">  <template class="js-file-alert-template">  <div data-view-component="true" class="flash flash-warn flash-full d-flex flex-items-center">  <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-alert">    <path d="M6.457 1.047c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0 1 14.082 15H1.918a1.75 1.75 0 0 1-1.543-2.575Zm1.763.707a.25.25 0 0 0-.44 0L1.698 13.132a.25.25 0 0 0 .22.368h12.164a.25.25 0 0 0 .22-.368Zm.53 3.996v2.5a.75.75 0 0 1-1.5 0v-2.5a.75.75 0 0 1 1.5 0ZM9 11a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z"></path></svg>    <span>      This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters.      <a class="Link--inTextBlock" href="https://github.co/hiddenchars" target="_blank">Learn more about bidirectional Unicode characters</a>    </span>  <div data-view-component="true" class="flash-action">        <a href="&#123;&#123; revealButtonHref &#125;&#125;" data-view-component="true" class="btn-sm btn">    Show hidden characters</a></div></div></template><template class="js-line-alert-template">  <span aria-label="This line has hidden Unicode characters" data-view-component="true" class="line-alert tooltipped tooltipped-e">    <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-alert">    <path d="M6.457 1.047c.659-1.234 2.427-1.234 3.086 0l6.082 11.378A1.75 1.75 0 0 1 14.082 15H1.918a1.75 1.75 0 0 1-1.543-2.575Zm1.763.707a.25.25 0 0 0-.44 0L1.698 13.132a.25.25 0 0 0 .22.368h12.164a.25.25 0 0 0 .22-.368Zm.53 3.996v2.5a.75.75 0 0 1-1.5 0v-2.5a.75.75 0 0 1 1.5 0ZM9 11a1 1 0 1 1-2 0 1 1 0 0 1 2 0Z"></path></svg></span></template>  <table data-hpc class="highlight tab-size js-file-line-container js-code-nav-container js-tagsearch-file" data-tab-size="8" data-paste-markdown-skip data-tagsearch-lang="Python" data-tagsearch-path="check_site.py">        <tr>          <td id="file-check_site-py-L1" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="1"></td>          <td id="file-check_site-py-LC1" class="blob-code blob-code-inner js-file-line"><span class=pl-c>#!/usr/bin/env python</span></td>        </tr>        <tr>          <td id="file-check_site-py-L2" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="2"></td>          <td id="file-check_site-py-LC2" class="blob-code blob-code-inner js-file-line"></td>        </tr>        <tr>          <td id="file-check_site-py-L3" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="3"></td>          <td id="file-check_site-py-LC3" class="blob-code blob-code-inner js-file-line"><span class=pl-s1>sites</span> <span class=pl-c1>=</span> [</td>        </tr>        <tr>          <td id="file-check_site-py-L4" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="4"></td>          <td id="file-check_site-py-LC4" class="blob-code blob-code-inner js-file-line">    <span class=pl-s>&#39;google.com&#39;</span>,</td>        </tr>        <tr>          <td id="file-check_site-py-L5" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="5"></td>          <td id="file-check_site-py-LC5" class="blob-code blob-code-inner js-file-line">]</td>        </tr>        <tr>          <td id="file-check_site-py-L6" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="6"></td>          <td id="file-check_site-py-LC6" class="blob-code blob-code-inner js-file-line"></td>        </tr>        <tr>          <td id="file-check_site-py-L7" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="7"></td>          <td id="file-check_site-py-LC7" class="blob-code blob-code-inner js-file-line"><span class=pl-v><span class="caps">USE</span>_BOXCAR</span> <span class=pl-c1>=</span> <span class=pl-c1>True</span></td>        </tr>        <tr>          <td id="file-check_site-py-L8" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="8"></td>          <td id="file-check_site-py-LC8" class="blob-code blob-code-inner js-file-line"><span class=pl-v><span class="caps">USE</span>_GROWL</span> <span class=pl-c1>=</span> <span class=pl-c1>True</span></td>        </tr>        <tr>          <td id="file-check_site-py-L9" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="9"></td>          <td id="file-check_site-py-LC9" class="blob-code blob-code-inner js-file-line"><span class=pl-v><span class="caps">BOXCAR</span>_EMAIL</span> <span class=pl-c1>=</span> <span class=pl-s>&#39;&#39;</span></td>        </tr>        <tr>          <td id="file-check_site-py-L10" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="10"></td>          <td id="file-check_site-py-LC10" class="blob-code blob-code-inner js-file-line"><span class=pl-v><span class="caps">BOXCAR</span>_API_KEY</span> <span class=pl-c1>=</span> <span class=pl-s>&#39;&#39;</span></td>        </tr>        <tr>          <td id="file-check_site-py-L11" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="11"></td>          <td id="file-check_site-py-LC11" class="blob-code blob-code-inner js-file-line"><span class=pl-v><span class="caps">BOXCAR</span>_API_SECRET</span> <span class=pl-c1>=</span> <span class=pl-s>&#39;&#39;</span></td>        </tr>        <tr>          <td id="file-check_site-py-L12" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="12"></td>          <td id="file-check_site-py-LC12" class="blob-code blob-code-inner js-file-line"></td>        </tr>        <tr>          <td id="file-check_site-py-L13" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="13"></td>          <td id="file-check_site-py-LC13" class="blob-code blob-code-inner js-file-line"><span class=pl-k>import</span> <span class=pl-s1>sys</span>, <span class=pl-s1>os</span>, <span class=pl-s1>urllib</span>, <span class=pl-s1>urllib2</span>, <span class=pl-s1>hashlib</span>, <span class=pl-s1>datetime</span></td>        </tr>        <tr>          <td id="file-check_site-py-L14" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="14"></td>          <td id="file-check_site-py-LC14" class="blob-code blob-code-inner js-file-line"></td>        </tr>        <tr>          <td id="file-check_site-py-L15" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="15"></td>          <td id="file-check_site-py-LC15" class="blob-code blob-code-inner js-file-line"><span class=pl-s1>now</span> <span class=pl-c1>=</span> <span class=pl-s1>datetime</span>.<span class=pl-s1>datetime</span>.<span class=pl-en>now</span>()</td>        </tr>        <tr>          <td id="file-check_site-py-L16" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="16"></td>          <td id="file-check_site-py-LC16" class="blob-code blob-code-inner js-file-line"><span class=pl-s1>errors</span> <span class=pl-c1>=</span> []</td>        </tr>        <tr>          <td id="file-check_site-py-L17" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="17"></td>          <td id="file-check_site-py-LC17" class="blob-code blob-code-inner js-file-line"></td>        </tr>        <tr>          <td id="file-check_site-py-L18" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="18"></td>          <td id="file-check_site-py-LC18" class="blob-code blob-code-inner js-file-line"><span class=pl-k>def</span> <span class=pl-en>send_notice</span>(<span class=pl-s1>site</span>, <span class=pl-s1>code</span>):</td>        </tr>        <tr>          <td id="file-check_site-py-L19" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="19"></td>          <td id="file-check_site-py-LC19" class="blob-code blob-code-inner js-file-line">    <span class=pl-k>if</span> <span class=pl-v><span class="caps">USE</span>_BOXCAR</span>:</td>        </tr>        <tr>          <td id="file-check_site-py-L20" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="20"></td>          <td id="file-check_site-py-LC20" class="blob-code blob-code-inner js-file-line">        <span class=pl-s1>api_url</span> <span class=pl-c1>=</span> <span class=pl-s>&#39;http://boxcar.io/devices/providers/%s/notifications&#39;</span> <span class=pl-c1>%</span> <span class=pl-v><span class="caps">BOXCAR</span>_API_KEY</span></td>        </tr>        <tr>          <td id="file-check_site-py-L21" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="21"></td>          <td id="file-check_site-py-LC21" class="blob-code blob-code-inner js-file-line">        <span class=pl-s1>data</span> <span class=pl-c1>=</span> &#123;</td>        </tr>        <tr>          <td id="file-check_site-py-L22" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="22"></td>          <td id="file-check_site-py-LC22" class="blob-code blob-code-inner js-file-line">            <span class=pl-s>&#39;email&#39;</span>: <span class=pl-s1>hashlib</span>.<span class=pl-en>md5</span>(<span class=pl-v><span class="caps">BOXCAR</span>_EMAIL</span>).<span class=pl-en>hexdigest</span>(),</td>        </tr>        <tr>          <td id="file-check_site-py-L23" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="23"></td>          <td id="file-check_site-py-LC23" class="blob-code blob-code-inner js-file-line">            <span class=pl-s>&#39;secret&#39;</span>: <span class=pl-v><span class="caps">BOXCAR</span>_API_SECRET</span>,</td>        </tr>        <tr>          <td id="file-check_site-py-L24" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="24"></td>          <td id="file-check_site-py-LC24" class="blob-code blob-code-inner js-file-line">            <span class=pl-s>&#39;notification[from_screen_name]&#39;</span>: <span class=pl-s1>site</span>,</td>        </tr>        <tr>          <td id="file-check_site-py-L25" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="25"></td>          <td id="file-check_site-py-LC25" class="blob-code blob-code-inner js-file-line">            <span class=pl-s>&#39;notification[message]&#39;</span>: <span class=pl-s1>code</span>,</td>        </tr>        <tr>          <td id="file-check_site-py-L26" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="26"></td>          <td id="file-check_site-py-LC26" class="blob-code blob-code-inner js-file-line">            <span class=pl-s>&#39;notification[from_remote_service_id]&#39;</span>: <span class=pl-s>u&#39;%s-%s&#39;</span> <span class=pl-c1>%</span> (<span class=pl-s1>now</span>.<span class=pl-en>strftime</span>(<span class=pl-s>&#39;%c&#39;</span>), <span class=pl-s1>site</span>)</td>        </tr>        <tr>          <td id="file-check_site-py-L27" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="27"></td>          <td id="file-check_site-py-LC27" class="blob-code blob-code-inner js-file-line">        &#125;</td>        </tr>        <tr>          <td id="file-check_site-py-L28" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="28"></td>          <td id="file-check_site-py-LC28" class="blob-code blob-code-inner js-file-line">        <span class=pl-s1>urllib2</span>.<span class=pl-en>urlopen</span>(<span class=pl-s1>api_url</span>, <span class=pl-s1>urllib</span>.<span class=pl-en>urlencode</span>(<span class=pl-s1>data</span>))</td>        </tr>        <tr>          <td id="file-check_site-py-L29" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="29"></td>          <td id="file-check_site-py-LC29" class="blob-code blob-code-inner js-file-line">    <span class=pl-k>if</span> <span class=pl-v><span class="caps">USE</span>_GROWL</span>:</td>        </tr>        <tr>          <td id="file-check_site-py-L30" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="30"></td>          <td id="file-check_site-py-LC30" class="blob-code blob-code-inner js-file-line">        <span class=pl-s1>os</span>.<span class=pl-en>system</span>(<span class=pl-s>&#39;growlnotify -n &quot;Website Monitor&quot; -p 2 &quot;%s&quot; -m &quot;%s&quot; -s&#39;</span> <span class=pl-c1>%</span> (<span class=pl-s1>site</span>, <span class=pl-s1>code</span>))</td>        </tr>        <tr>          <td id="file-check_site-py-L31" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="31"></td>          <td id="file-check_site-py-LC31" class="blob-code blob-code-inner js-file-line"></td>        </tr>        <tr>          <td id="file-check_site-py-L32" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="32"></td>          <td id="file-check_site-py-LC32" class="blob-code blob-code-inner js-file-line"><span class=pl-k>for</span> <span class=pl-s1>site</span> <span class=pl-c1>in</span> <span class=pl-s1>sites</span>:</td>        </tr>        <tr>          <td id="file-check_site-py-L33" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="33"></td>          <td id="file-check_site-py-LC33" class="blob-code blob-code-inner js-file-line">    <span class=pl-k>try</span>:</td>        </tr>        <tr>          <td id="file-check_site-py-L34" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="34"></td>          <td id="file-check_site-py-LC34" class="blob-code blob-code-inner js-file-line">        <span class=pl-s1>urllib2</span>.<span class=pl-en>urlopen</span>(<span class=pl-s>&#39;http://%s&#39;</span> <span class=pl-c1>%</span> <span class=pl-s1>site</span>, <span class=pl-c1>None</span>, <span class=pl-c1>30</span>)</td>        </tr>        <tr>          <td id="file-check_site-py-L35" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="35"></td>          <td id="file-check_site-py-LC35" class="blob-code blob-code-inner js-file-line">    <span class=pl-k>except</span> <span class=pl-s1>urllib2</span>.<span class=pl-v>HTTPError</span>, <span class=pl-s1>code</span>:</td>        </tr>        <tr>          <td id="file-check_site-py-L36" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="36"></td>          <td id="file-check_site-py-LC36" class="blob-code blob-code-inner js-file-line">        <span class=pl-en>send_notice</span>(<span class=pl-s1>site</span>, <span class=pl-s1>code</span>)</td>        </tr>        <tr>          <td id="file-check_site-py-L37" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="37"></td>          <td id="file-check_site-py-LC37" class="blob-code blob-code-inner js-file-line">        <span class=pl-s1>errors</span>.<span class=pl-en>append</span>(<span class=pl-s1>site</span>)</td>        </tr>        <tr>          <td id="file-check_site-py-L38" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="38"></td>          <td id="file-check_site-py-LC38" class="blob-code blob-code-inner js-file-line">    <span class=pl-k>except</span> <span class=pl-s1>urllib2</span>.<span class=pl-v>URLError</span>, <span class=pl-s1>error</span>:</td>        </tr>        <tr>          <td id="file-check_site-py-L39" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="39"></td>          <td id="file-check_site-py-LC39" class="blob-code blob-code-inner js-file-line">        <span class=pl-s1>error</span> <span class=pl-c1>=</span> <span class=pl-en>str</span>(<span class=pl-s1>error</span>)</td>        </tr>        <tr>          <td id="file-check_site-py-L40" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="40"></td>          <td id="file-check_site-py-LC40" class="blob-code blob-code-inner js-file-line">        <span class=pl-k>if</span> <span class=pl-s1>error</span>.<span class=pl-en>find</span>(<span class=pl-s>&#39;Errno 8&#39;</span>) <span class=pl-c1>&gt;</span> <span class=pl-c1>-</span><span class=pl-c1>1</span>:</td>        </tr>        <tr>          <td id="file-check_site-py-L41" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="41"></td>          <td id="file-check_site-py-LC41" class="blob-code blob-code-inner js-file-line">            <span class=pl-en>send_notice</span>(<span class=pl-s1>site</span>, <span class=pl-s>u&#39;Does not appear to exist.&#39;</span>)</td>        </tr>        <tr>          <td id="file-check_site-py-L42" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="42"></td>          <td id="file-check_site-py-LC42" class="blob-code blob-code-inner js-file-line">        <span class=pl-k>else</span>:</td>        </tr>        <tr>          <td id="file-check_site-py-L43" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="43"></td>          <td id="file-check_site-py-LC43" class="blob-code blob-code-inner js-file-line">            <span class=pl-en>send_notice</span>(<span class=pl-s1>site</span>, <span class=pl-s>u&#39;%s&#39;</span> <span class=pl-c1>%</span> <span class=pl-s1>error</span>)</td>        </tr>        <tr>          <td id="file-check_site-py-L44" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="44"></td>          <td id="file-check_site-py-LC44" class="blob-code blob-code-inner js-file-line">        <span class=pl-s1>errors</span>.<span class=pl-en>append</span>(<span class=pl-s1>site</span>)</td>        </tr>        <tr>          <td id="file-check_site-py-L45" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="45"></td>          <td id="file-check_site-py-LC45" class="blob-code blob-code-inner js-file-line">    <span class=pl-k>except</span>:</td>        </tr>        <tr>          <td id="file-check_site-py-L46" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="46"></td>          <td id="file-check_site-py-LC46" class="blob-code blob-code-inner js-file-line">        <span class=pl-s1>errors</span>.<span class=pl-en>append</span>(<span class=pl-s1>site</span>)</td>        </tr>        <tr>          <td id="file-check_site-py-L47" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="47"></td>          <td id="file-check_site-py-LC47" class="blob-code blob-code-inner js-file-line">        </td>        </tr>        <tr>          <td id="file-check_site-py-L48" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="48"></td>          <td id="file-check_site-py-LC48" class="blob-code blob-code-inner js-file-line"><span class=pl-k>if</span> <span class=pl-en>len</span>(<span class=pl-s1>errors</span>):</td>        </tr>        <tr>          <td id="file-check_site-py-L49" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="49"></td>          <td id="file-check_site-py-LC49" class="blob-code blob-code-inner js-file-line">    <span class=pl-k>print</span> <span class=pl-s>u&#39;%s encountered errors.&#39;</span> <span class=pl-c1>%</span> <span class=pl-s>&#39;,&#39;</span>.<span class=pl-en>join</span>(<span class=pl-s1>errors</span>)</td>        </tr>        <tr>          <td id="file-check_site-py-L50" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="50"></td>          <td id="file-check_site-py-LC50" class="blob-code blob-code-inner js-file-line"><span class=pl-k>else</span>:</td>        </tr>        <tr>          <td id="file-check_site-py-L51" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="51"></td>          <td id="file-check_site-py-LC51" class="blob-code blob-code-inner js-file-line">    <span class=pl-k>print</span> <span class=pl-s>u&#39;All sites checked out.&#39;</span></td>        </tr>        <tr>          <td id="file-check_site-py-L52" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="52"></td>          <td id="file-check_site-py-LC52" class="blob-code blob-code-inner js-file-line">        </td>        </tr>        <tr>          <td id="file-check_site-py-L53" class="blob-num js-line-number js-code-nav-line-number js-blob-rnum" data-line-number="53"></td>          <td id="file-check_site-py-LC53" class="blob-code blob-code-inner js-file-line"><span class=pl-s1>sys</span>.<span class=pl-en>exit</span>()</td>        </tr>  </table></div>    </div>  </div></div>      </div>      <div class="gist-meta">        <a href="https://gist.github.com/dryan/460331/raw/0f8af66ecacfb315ef32e44c8d7d670294db08e4/check_site.py" style="float:right" class="Link--inTextBlock">view raw</a>        <a href="https://gist.github.com/dryan/460331#file-check_site-py" class="Link--inTextBlock">          check_site.py        </a>        hosted with &#10084; by <a class="Link--inTextBlock" href="https://github.com">GitHub</a>      </div>    </div></div>
<p>Save the contents of the script to a file called &ldquo;check_sites&rdquo; somewhere in <a href="http://en.wikipedia.org/wiki/Path_(variable)">your path</a>) and make the file executable (<code>chmod +x check_sites</code>). Edit the <code>sites</code> variable, creating an entry for each site you want to check. You can test the script by running <code>check_sites</code> on a command line. Finally, you need to <a href="http://adminschoice.com/crontab-quick-reference">set up a cron job</a> to periodically run the script. For example <code>0-59/5 * * * * /path/to/check_sites &gt;&amp; /dev/null</code> will run the script every five minutes. (You need to edit &ldquo;/path/to/check_sites&rdquo; to be the actual path of the&nbsp;script.)</p>
<p>That&rsquo;s it. Now you&rsquo;ll be alerted whenever the script finds an error with one of the sites in the&nbsp;list.</p>
<p>Cross-posted at&nbsp;<a href="http://dryan.com/articles/monitor-your-websites/">http://dryan.com/articles/monitor-your-websites/</a></p>
				<img src="https://blog.easy-designs.net/?ACT=38&utmac=UA-176472-10&utmn1601810728&utmr=https%3A%2F%2Fblog.easy-designs.net%2Farchives%2Fby-author%2Fdaniel-ryan%2F&utmp=%2Frss%2Fby-author%2Fdaniel-ryan.rss&guid=ON" alt="" style="position:absolute;"/>
			]]></description>
					<link>https://blog.easy-designs.net/archives/monitor-your-websites-with-notifications/</link>
			<guid>https://blog.easy-designs.net/archives/monitor-your-websites-with-notifications/</guid>
			<dc:date>2010-07-16T11:02:35-04:00</dc:date>
		</item>
	
	</channel>
</rss>